name: release

env:
  DEBUG: napi:*
  APP_NAME: create-janustack
  MACOSX_DEPLOYMENT_TARGET: 11

permissions:
  contents: write
  id-token: write

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.settings.host }}

    defaults:
      run:
        working-directory: packages/create-janustack

    strategy:
      fail-fast: false
      matrix:
        settings:
          #---- Host runner builds for macOS and Windows targets
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              bun install
              bun run build -- --target x86_64-apple-darwin

          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: |
              bun install
              bun run build -- --target x86_64-pc-windows-msvc

          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              bun install
              bun run build -- --target aarch64-apple-darwin

          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: |
              bun install
              bun run build -- --target aarch64-pc-windows-msvc

            #---- Docker builds for Linux targets
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            docker: ghcr.io/janustack/create-janustack/napi-rs:alpine
            build: |
              set -e
              rustup target add aarch64-unknown-linux-musl
              bun install
              bun run build -- --target aarch64-unknown-linux-musl

          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            docker: ghcr.io/janustack/create-janustack/napi-rs:debian-aarch64
            build: |
              set -e
              bun install
              bun run build -- --target aarch64-unknown-linux-gnu

          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            docker: ghcr.io/janustack/create-janustack/napi-rs:alpine
            build: |
              set -e
              bun install
              bun run build -- --target x86_64-unknown-linux-musl

          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            docker: ghcr.io/janustack/create-janustack/napi-rs:debian
            build: |
              set -e
              bun install
              bun run build -- --target x86_64-unknown-linux-gnu

    name: stable - ${{ matrix.settings.target }} - node@latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node
        if: ${{ !matrix.settings.docker }}
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Setup Rust toolchain
        if: ${{ !matrix.settings.docker }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.settings.target }}
          override: true

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - name: Setup toolchain
        if: ${{ matrix.settings.setup }}
        run: ${{ matrix.settings.setup }}

      - name: Build in Docker
        if: ${{ matrix.settings.docker }}
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.settings.docker }}
          options: >
            --user 0:0
            -v ${{ github.workspace }}/.cargo-cache/git/db:/usr/local/cargo/git/db
            -v ${{ github.workspace }}/.cargo/registry/cache:/usr/local/cargo/registry/cache
            -v ${{ github.workspace }}/.cargo/registry/index:/usr/local/cargo/registry/index
            -v ${{ github.workspace }}:/build
            -w /build/packages/create-janustack
          run: ${{ matrix.settings.build }}

      - name: Build on host
        if: ${{ !matrix.settings.docker }}
        run: ${{ matrix.settings.build }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: packages/create-janustack/${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  universal-macOS:
    name: Build universal macOS binary
    needs:
      - build
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
    
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-x86_64-apple-darwin
          path: artifacts

      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-aarch64-apple-darwin
          path: artifacts

      - name: Combine binaries
        run: bun universal

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-universal-apple-darwin
          path: packages/create-janustack/${{ env.APP_NAME }}.*.node
          if-no-files-found: error

  publish:
    name: Publish to npm registry
    runs-on: ubuntu-latest
    needs:
      - universal-macOS
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
    
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: latest
  
      - name: Install dependencies
        run: bun install

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts
        run: bun artifacts

      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: bun publish --access public
        env:
          NPM_TOKEN: ${{ secrets.JANUSTACK_NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}