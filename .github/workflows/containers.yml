name: Build and Push Images

env:
  REGISTRY_HOST: ghcr.io
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}

on:
  workflow_dispatch:
  
permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  build-and-push-images:
    name: Build and push images
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        # - aarch64 architectures
        - { name: aarch64-alpine, needs_libcxx: false }
        - { name: aarch64-debian, needs_libcxx: true }
        # - x86_64 architectures
        - { name: x86_64-debian, needs_libcxx: false }
        # - Zig cross builds
        - { name: zig-alpine, needs_libcxx: false }
        - { name: zig-debian, needs_libcxx: false }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to GHCR
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ env.REGISTRY_HOST }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
        
      # Only run this step for debian-aarch64 images
      - name: Install latest libc++-dev for cross build
        if: matrix.needs_libcxx == true
        run: |
            podman pull node:slim
            podman run --rm \
              --platform linux/arm64 \
              --user 0:0 \
              -v ${{ github.workspace }}/lib/llvm-18:/usr/lib/llvm-18 \
              node:slim \
              /bin/sh -c "
                apt update &&
                apt install -y wget gnupg2 &&
                wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - &&
                echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-18 main" >> /etc/apt/sources.list &&
                echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-18 main" >> /etc/apt/sources.list &&
                apt update &&
                apt install libc++-18-dev libc++abi-18-dev -y --fix-missing --no-install-recommends &&
                rm /usr/lib/llvm-18/lib/libc++abi.so
              "

      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: containers/${{ matrix.name }}.Containerfile
          platforms: linux/amd64,linux/arm64
          image:  ${{ env.REGISTRY_HOST }}/${{ github.repository_owner }}/create-janustack/napi-rs
          tags: ${{ matrix.name }}

      - name: Push to GHCR
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags:  ${{ steps.build-image.outputs.tags }}